<?php

/**
 * Valghalla mail module
 *
 * @file valghalla_mail.module
 *
 * @copyright 2012 OS2 - Offentligt DigitaliseringsfÃ¦llesskab.
 * See README.md at https://github.com/os2web/valghalla_mail
 *
 */

/**
 * Code for the Valghalla Mail. feature.
 */
include_once 'valghalla_mail.features.inc';

module_load_include('inc', 'valghalla_mail', 'includes/valghalla_mail_navigation');
module_load_include('inc', 'valghalla_mail', 'includes/valghalla_mail_submit');
module_load_include('inc', 'valghalla_mail', 'includes/valghalla_mail_form');

/**
 * Migration wrapper
 *
 * @author Thomas Thune Hansen <tth@bellcom.dk>
 * @TODO:
 *  Remove when valhalla_volunteers module is renamed.
 */
function _valghalla_helper_get_volunteer_info_params($params){
  return _valhalla_helper_get_volunteer_info_params($params);
}
function _valghalla_volunteers_default_rsvp_status(){
  return _valhalla_volunteers_default_rsvp_status();
}

/**
 * Implements hook_cron()
 *
 * @author Thomas Thune Hansen <tth@bellcom.dk>
 */
function valghalla_mail_cron(){
  include_once 'includes/valghalla_mail_rsvp_reminder.inc';

  $last_run_ts = variable_get('valghalla_mail_last_run', REQUEST_TIME);

  valghalla_mail_rsvp_reminder($last_run_ts);

  variable_set('valghalla_mail_last_run', REQUEST_TIME);
}

/**
 * Implements hook_menu()
 *
 * @author Thomas Thune Hansen <tth@bellcom.dk>
 */
function valghalla_mail_menu() {
  $items['admin/valhalla/mails'] = array(
      'title' => 'Mails',
      'description' => 'Tilretning af standard mails.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('valghalla_mail_admin_valghalla_mails'),
      'access arguments' => array('administer valghalla'),
      'file' => 'valghalla_mail_admin.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => -4,
  );
  $items['admin/valhalla/sendmail'] = array(
      'title' => 'Send mails til frivillige',
      'description' => 'Her kan der udsendes mails til alle, eller udvalgte segmenter, af de frivillige.',
      'page callback' => 'valghalla_mail_sendmail_create_email_node', // Step 1 create an email node
      'access arguments' => array('administer valghalla'),
      'file' =>'includes/valghalla_mail_form.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => -5,
  );
  $items['admin/valhalla/sendinvitation'] = array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('valghalla_mail_sendinvitation_form',3), // Step 2 get mail addresses.
      'access arguments' => array('administer valghalla'),
      'file' =>'includes/valghalla_mail_form.inc',
    );
  $items['admin/valhalla/sendto/%'] = array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('valghalla_mail_sendmail_form',3), // Step 2 get mail addresses.
      'access arguments' => array('administer valghalla'),
      'file' =>'includes/valghalla_mail_form.inc',
  );
  $items['valhalla_mail/ajax/view/%/%'] = array(
    'page callback' => 'valghalla_mail_ajax_view',
    'access arguments' => array('administer valghalla'),
    'page arguments' => array(3,4),

  );
  return $items;
}

/**
 * Handles valghalla templated mail sendout.
 *
 */
function valghalla_mail_mail($key, &$message, $params) {
  $options = array();
  switch ($key) {
    // "default" case for sending mail.
    case 'mail':
      $params += array('tokens' => '');

      // Html mail
      if(strstr($params['format'], 'html')){
        $headers = array(
          'MIME-Version' => '1.0',
          'Content-Type' => 'text/html; charset=UTF-8; format=flowed',
          'Content-Transfer-Encoding' => '8Bit',
          'X-Mailer' => 'Drupal'
        );
        foreach ($headers as $key => $value) {
          $message['headers'][$key] = $value;
        }
      }

      $message['subject'] = t($params['subject'], $params['tokens'], $options);
      $message['body'][] = t($params['body'], $params['tokens'], $options);
      $message['params']['attachments'] = $params['attachments'];
      break;
    // 20/03-2014 - tth@bellcom.dk: Not sure if this is needed anymore
    // will keep it for a bit.
    case 'default':
      $message['subject'] = t($params['subject'], $params['replacements'], $options);
      $message['body'][] = t($params['message'], $params['replacements'], $options);
      break;
  }
}

/**
 * Fetch mail subject and body for given role, mail type.
 *
 * @author Thomas Thune Hansen <tth@bellcom.dk>
 */
function valghalla_mail_get_mail($role_nid, $mail_type, $mail_nid = FALSE){
  if($mail_type){
    // Get role specific mail node id.
    $mail_nid = db_select('field_data_field_'.$mail_type, 't')
      ->fields('t', array('field_'.$mail_type.'_target_id'))
      ->condition('t.entity_id', $role_nid)
      ->execute()
      ->fetchColumn();
  }

  // If it doesn't exist, get the standard.
  if(!$mail_nid){
    $mail_nid = variable_get('valghalla_mail_' . $mail_type, FALSE);
  }

  $mail_node = node_load($mail_nid);

  // If mail_node is valid, get values.
  if(is_object($mail_node)){
    $body_field = field_get_items('node', $mail_node, 'body');
    $subject_field = field_get_items('node', $mail_node, 'field_subject');
    // yani: add attachment
    if( $files = field_get_items('node', $mail_node, 'field_valghalla_mail_attachments')) {
      foreach($files as $file_info){
        $file = file_load($file_info['fid']);
        $uri = drupal_realpath($file->uri);
        $attachments[] = array(
          'filecontent' => $uri,
          'filename' => $file->filename,
          'filemime' => $file->filemime,
        );
      }
    }
    $body = $body_field[0]['value'];
    $format = $body_field[0]['format'];
    $subject = $subject_field[0]['value'];
    return array('subject' => $subject, 'body' => $body, 'format' => $format, 'attachments' => $attachments);
  }
  return FALSE;
}

/**
 * Mail preview AJAX page callback.
 *
 * Prints the message with the tokens replaced. As it would
 * look in the mail.
 */
function valghalla_mail_ajax_view($mail_nid, $volunteer) {
  $options = array();
  $volunteer_node = node_load($volunteer);

  $tokens = _valhalla_helper_get_volunteer_info_params($volunteer_node);

  if($mail_nid == 'invite'){
    $params = valghalla_mail_get_mail($tokens['!position_nid'], 'invitation');
  }
  else {
    $params = valghalla_mail_get_mail(FALSE, FALSE, $mail_nid);
  }

  $body = t($params['body'], $tokens);
  if(!strstr($params['format'], 'html')){
    $body = nl2br($body);
  }

  $subject = t($params['subject'], $tokens, $options);
  print "<div class = 'valghalla_mail_subject'> Emne : " . $subject . "</div>";
  print "<div class= 'valghalla_mail_body'>" . $body . "</div>";
}
